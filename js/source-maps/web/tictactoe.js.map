{"version":3,"names":[],"mappings":"","sources":["web/tictactoe.js"],"sourcesContent":["'use strict';\n\nvar catWins = document.getElementById('#nekoScores');\nvar playerXWins = document.getElementById('#numberScoreP1');\nvar playerOWins = document.getElementById('#numberScoreP2');\nvar iconP1 = \"\";\nvar iconP2 = \"\";\ncatWins = 0;\nplayerXWins = 0;\nplayerOWins = 0;\n\nvar gamePresenter = function gamePresenter(GameState) {\n  this.GameState = GameState;\n};\ngamePresenter.prototype.mark = function (index) {\n  this.GameState.mark(index);\n};\n\ngamePresenter.prototype.getGameBoard = function () {\n  return this.GameState.gameBoard;\n};\ngamePresenter.prototype.drawGameBoard = function () {\n  var boardHtml = \"\";\n  for (var i = 0; i < this.GameState.gameBoard.length; i++) {\n    boardHtml += \"<div class='box'></div>\";\n  }\n  return boardHtml;\n};\n\n/////Will help filter out taken spots in gameboard for AI\n\nvar AI = {\n  randomMark: function randomMark(gs) {\n    var openSpots = gs.openSpots();\n    var index = Math.floor(Math.random() * openSpots.length);\n    var randomMark = openSpots[index];\n    console.log(randomMark, index, openSpots);\n\n    return randomMark;\n  }\n};\n\nfunction replaceIcon(element, icon) {\n  $(element).addClass(\"replaceIcon\");\n  $(element).html(icon);\n}\n\ngamePresenter.prototype.takeTurn = function (boxElement) {\n  var gs = this.GameState;\n  var spot = $(boxElement).index();\n  var shouldContinue = true;\n  if (gs.isTaken(spot) === true) {\n    alert(\"Spot is taken!\");\n    shouldContinue = false;\n    console.log('hello');\n  } else {\n    this.mark(spot);\n    if (gs.currentPlayer === \"X\") {\n      replaceIcon(boxElement, iconP1);\n    } else if (gs.currentPlayer === \"O\") {\n      replaceIcon(boxElement, iconP2);\n    }\n\n    if (gs.hasCurrentPlayerWon() === true) {\n      shouldContinue = false;\n      var playerXWon = gs.hasPlayerWon(\"X\");\n      var playerOWon = gs.hasPlayerWon(\"O\");\n      if (playerXWon === true) {\n        vex.dialog.confirm({\n          message: \"PLAYER 1 WON!!!\",\n          contentClassName: 'p1Won',\n          callback: function callback(value) {\n            if (value === false) {\n              location.reload();\n            } else {\n              $('#whichBoard').show();\n              $('#boardList').show();\n              $('#whichBoard').siblings().hide();\n            }\n          },\n          buttons: [$.extend({}, vex.dialog.buttons.YES, {\n            text: 'Play Again'\n          }), $.extend({}, vex.dialog.buttons.NO, {\n            text: 'Nope'\n          })]\n        });\n        playerXWins += 1;\n        $('#numberScoreP1').html(playerXWins);\n      } else {\n        vex.dialog.confirm({\n          message: \"PLAYER 2 WON!!\",\n          contentClassName: 'p2Won',\n          callback: function callback(value) {\n            if (value === false) {\n              location.reload();\n            } else {\n              $('#whichBoard').show();\n              $('#boardList').show();\n              $('#whichBoard').siblings().hide();\n              $('.exit span').hide();\n            }\n          },\n          buttons: [$.extend({}, vex.dialog.buttons.YES, {\n            text: 'Play Again'\n          }), $.extend({}, vex.dialog.buttons.NO, {\n            text: 'Nope'\n          })]\n        });\n        playerOWins += 1;\n        $('#numberScoreP2').html(playerOWins);\n      }\n    } else if (gs.isThereATie() === true) {\n      shouldContinue = false;\n      vex.dialog.confirm({\n        message: \"NEKO ATE YOUR SUSHI!\",\n        contentClassName: 'nekoWin',\n        callback: function callback(value) {\n          if (value === false) {\n            location.reload();\n          } else {\n            $('#whichBoard').show();\n            $('#boardList').show();\n            $('#whichBoard').siblings().hide();\n            $('.exit span').hide();\n          }\n        },\n        buttons: [$.extend({}, vex.dialog.buttons.YES, {\n          text: 'Play Again'\n        }), $.extend({}, vex.dialog.buttons.NO, {\n          text: 'Nope'\n        })]\n      });\n      catWins += 1;\n      $('#nekoScore').html(catWins);\n    }\n    gs.changePlayer();\n  }\n  return shouldContinue;\n};\ngamePresenter.prototype.runGame = function () {\n  var self = this;\n  var gs = self.GameState;\n  $('.box').each(function () {\n    $(this).click(function () {\n      var shouldContinue = self.takeTurn(this);\n      if ($('.board').hasClass('computer')) {\n        if (shouldContinue) {\n          var t = AI.randomMark(gs);\n          var x = t + 1;\n          var AIelement = $('.box:nth-of-type(' + x + ')');\n          self.takeTurn(AIelement);\n        }\n      }\n    });\n  });\n};\n\nvar state = new GameState(3);\nvar presenter = new gamePresenter(state);\n\n////Once both players have selected an icon then Next button show\nfunction showNext() {\n  var p1 = $('#submitButtonP1').attr('value');\n  var p2 = $('#submitButtonP2').attr('value');\n  if (p1 === 'set' && p2 === 'set') {\n    $('#startGameButton').show();\n  }\n}\n\n$(document).ready(function () {\n  ////Hides all boards at the start of game\n  $('#boardList').hide();\n  $('#whichBoard').hide();\n  $('#threeBoard').hide();\n  $('#fourBoard').hide();\n  $('#fiveBoard').hide();\n  //////Hides scores and Player Icons to select\n  $('#score').hide();\n  $('#iconsForP1').hide();\n  $('#iconsForP2').hide();\n  $('#startGameButton').hide();\n  $('.exit img').hide();\n  $('.exit span').hide();\n\n  $('.exit img').click(function () {\n    location.reload();\n  });\n  $('.exit span').click(function () {\n    $('#playerList').hide();\n    $('.exit img').show();\n    $('#whichBoard').show();\n    $('#boardList').show();\n    $('#whichBoard').siblings().hide();\n    $('.exit span').hide();\n  });\n\n  ////starts the Game, player can then chose the board size\n  $('#startGameButton p').click(function () {\n    $('#playerList').hide();\n    $('.exit img').show();\n    $('#whichBoard').show();\n    $('#boardList').show();\n    $('#whichBoard').siblings().hide();\n    $('.board').addClass('playerVSplayer');\n  });\n  ///Player can select their icons, this is for 2 players\n  $('#whichPlayer #player1 p').click(function () {\n    $('#playerVsComputer').slideToggle();\n  });\n  $('#whichPlayer #player2 p').click(function () {\n    $('#iconsForP2').slideToggle();\n  });\n\n  ////form for Player Icons sets only one selection of icon, for bother 1 player and 2 player\n\n  $(\"form#playerVsComputer\").submit(function (event) {\n    event.preventDefault();\n    iconP1 = $('#playerVsComputer input:checked').val();\n    iconP2 = \"<img src='/gfx/vectors/computer.svg' style='width: auto; height: 100px'>\";\n    $('#player1score').prepend(iconP1);\n    $('#player2score').prepend(iconP2);\n    $('#playerList').hide();\n    $('.exit img').show();\n    $('#whichBoard').show();\n    $('#boardList').show();\n    $('#whichBoard').siblings().hide();\n    $('.board').addClass('computer');\n    $(\".scoreBoard #player2score p\").text(function () {\n      return $(this).text().replace('PLAYER 2', 'Computer');\n    });\n  });\n\n  $(\"form#iconP1\").submit(function (event) {\n    event.preventDefault();\n    iconP1 = $('#iconP1 input:checked').val();\n    if (iconP1 === iconP2) {\n      vex.dialog.alert({\n        message: \"The icon is taken, pick another!\"\n      });\n    } else {\n      $('#player1score').prepend(iconP1);\n      $('#iconP1 :radio').attr('disabled', true);\n      $('#submitButtonP1').attr('disabled', true);\n      $('#submitButtonP1').attr('value', 'set');\n      $('#submitButtonP1').addClass('clicked');\n      showNext();\n    }\n  });\n\n  $(\"form#iconP2.playerSelectIcons\").submit(function (event) {\n    event.preventDefault();\n    iconP2 = $('#iconP2 input:checked').val();\n    if (iconP2 === iconP1) {\n      vex.dialog.alert({\n        message: \"The icon is taken, pick another!\"\n      });\n    } else {\n      $(\"#player2score\").prepend(iconP2);\n      $(\"#iconP2 :radio\").attr('disabled', true);\n      $('#submitButtonP2').attr('disabled', true);\n      $('#submitButtonP2').attr('value', 'set');\n      $('#submitButtonP2').addClass('clicked');\n      showNext();\n    }\n  });\n\n  /////Player choses which board to play\n  $('#three').click(function () {\n    var gameDimension = $(this).children('p').data('boardsize');\n    presenter.GameState = new GameState(3);\n    $('#threeBoard').html(presenter.drawGameBoard());\n    presenter.runGame();\n    $('#threeBoard').show();\n    $('#whichBoard').hide();\n    $('#score').show();\n    $('.exit span').show();\n  });\n  $('#four').click(function () {\n    var gameDimension = $(this).children('p').data('boardsize');\n    presenter.GameState = new GameState(4);\n    $('#fourBoard').html(presenter.drawGameBoard());\n    presenter.runGame();\n    $('#whichBoard').hide();\n    $('#fourBoard').show();\n    $('#score').show();\n    $('.exit span').show();\n  });\n  $('#five').click(function () {\n    var gameDimension = $(this).children('p').data('boardsize');\n    presenter.GameState = new GameState(5);\n    $('#fiveBoard').html(presenter.drawGameBoard());\n    presenter.runGame();\n    $('#whichBoard').hide();\n    $('#fiveBoard').show();\n    $('#score').show();\n    $('.exit span').show();\n  });\n});"],"file":"web/tictactoe.js","sourceRoot":"/source/"}